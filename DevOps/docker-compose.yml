version: '3.8'

services:
  # Servicio principal de la aplicación
  emas-app:
    image: emas-weather:latest
    container_name: emas-weather-app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - HOST=${HOST}
      - DB_PATH=${DB_PATH}
      - DB_BACKUP_PATH=${DB_BACKUP_PATH}
      - LOG_LEVEL=${LOG_LEVEL}
      - WEATHER_STATIONS=${WEATHER_STATIONS}
      - STATION_POLLING_INTERVAL=${STATION_POLLING_INTERVAL}
      - STATION_REQUEST_TIMEOUT=${STATION_REQUEST_TIMEOUT}
      - UDP_ENABLED=${UDP_ENABLED}
      - UDP_PORT=${UDP_PORT}
      - UDP_HOST=${UDP_HOST}
      - UDP_BROADCAST_INTERVAL=${UDP_BROADCAST_INTERVAL}
      - WS_PATH=${WS_PATH}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - BACKUP_ENABLED=${BACKUP_ENABLED}
      - BACKUP_INTERVAL_HOURS=${BACKUP_INTERVAL_HOURS}
      - ALERT_CHECK_INTERVAL=${ALERT_CHECK_INTERVAL}
      - DATA_COLLECTION_INTERVAL=${DATA_COLLECTION_INTERVAL}
    volumes:
      - emas_data:/app/data
      - emas_logs:/app/logs
      - emas_backups:/app/backups
    networks:
      - emas_network
    depends_on:
      - emas-db
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de datos SQLite (volumen persistente)
  emas-db:
    image: alpine:latest
    container_name: emas-db
    restart: unless-stopped
    volumes:
      - emas_data:/data
    networks:
      - emas_network
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        echo 'Base de datos SQLite inicializada' &&
        tail -f /dev/null
      "

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: emas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - emas_logs:/var/log/nginx
    networks:
      - emas_network
    depends_on:
      - emas-app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache y sesiones (opcional)
  redis:
    image: redis:7-alpine
    container_name: emas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - emas_redis:/data
    networks:
      - emas_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus para monitoreo
  prometheus:
    image: prom/prometheus:latest
    container_name: emas-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - emas_prometheus:/prometheus
    networks:
      - emas_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Backup automático
  backup:
    image: alpine:latest
    container_name: emas-backup
    restart: unless-stopped
    volumes:
      - emas_data:/data:ro
      - emas_backups:/backups
      - ./backup:/scripts:ro
    networks:
      - emas_network
    command: >
      sh -c "
        apk add --no-cache sqlite3 &&
        chmod +x /scripts/backup.sh &&
        /scripts/backup.sh
      "
    depends_on:
      - emas-app

volumes:
  emas_data:
    driver: local
  emas_logs:
    driver: local
  emas_backups:
    driver: local
  emas_redis:
    driver: local
  emas_prometheus:
    driver: local

networks:
  emas_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
